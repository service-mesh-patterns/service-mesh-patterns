name: ImageHub Istio Sample
services:
  ns.sample:
    type: Namespace.K8s
    name: imagehub

  imagehub.api.v1:
    type: Application
    name: api
    namespace: $(#ref.services.[ns.sample].name)
    settings:
      advanced:
        labels:
          app: api
          version: v1
      replicas: 1
      containers:
        - name: api-v1
          image: layer5/image-hub-api:latest
          ports:
            - containerPort: 9091
    dependsOn:
      - ns.sample

  imagehub.web.v1:
    type: Application
    name: web
    namespace: $(#ref.services.[ns.sample].name)
    settings:
      advanced:
        labels:
          app: web
          version: v1
      replicas: 1
      containers:
        - name: web-v1
          image: layer5/image-hub-web:latest
          ports:
            - containerPort: 8080
    dependsOn:
      - ns.sample
  
  imagehub.gateway:
    type: Gateway.Istio
    name: sample-app-gateway
    namespace: $(#ref.services.[ns.sample].name)
    settings:
      selector:
        istio: ingressgateway
      servers:
      - port:
          number: 80
          name: http
          protocol: HTTP
        hosts:
        - "*"
    dependsOn:
      - ns.sample

  imagehub.api.vs:
    type: VirtualService.Istio
    name: imagehub-api
    namespace: $(#ref.services.[ns.sample].name)
    settings:
      hosts:
        - "*"
      gateways:
        - $(#ref.services.[imagehub.gateway].name)
      http:
        - match:
            - uri:
                prefix: /auth
            - uri:
                prefix: /pull
            - uri:
                prefix: /signup
            - uri:
                prefix: /upgrade
          route:
            - destination:
                host: api
                port:
                  number: 9091
    dependsOn:
      - ns.sample
      - imagehub.gateway

  imagehub.web.vs:
    type: VirtualService.Istio
    name: imagehub-web
    namespace: $(#ref.services.[ns.sample].name)
    settings:
      hosts:
        - "*"
      gateways:
        - $(#ref.services.[imagehub.gateway].name)
      http:
        - route:
            - destination:
                host: web
                port:
                  number: 8080
    dependsOn:
      - ns.sample
      - imagehub.gateway

  generic-istio-filter:
    type: EnvoyFilterIstio
    namespace: $(#ref.services.[ns.sample].name)
    settings:
      configPatches:
        - applyTo: HTTP_FILTER
          match:
            context: SIDECAR_INBOUND
            proxy:
              proxyVersion: '^1\.9.*'
            listener:
              portNumber: 9091
              filterChain:
                filter:
                  name: envoy.http_connection_manager
                  subFilter:
                    name: envoy.router
          patch:
            operation: INSERT_BEFORE
            value:
              name: envoy.filter.http.wasm
              config_discovery:
                config_source:
                  ads: {}
                  initial_fetch_timeout: 0s
                type_urls: ["type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm"]
      workloadSelector:
        labels:
          app: api
          version: v1

  ratelimit-filter:
    type: EnvoyFilterIstio
    namespace: $(#ref.services.[ns.sample].name)
    settings:
      configPatches:
        - applyTo: EXTENSION_CONFIG
          match:
            context: SIDECAR_INBOUND
          patch:
            operation: ADD
            value:
              name: envoy.filter.http.wasm
              typed_config:
                "@type": type.googleapis.com/udpa.type.v1.TypedStruct
                type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                value:
                  config:
                    configuration:
                      "@type": type.googleapis.com/google.protobuf.StringValue
                      value: "rate_limit_filter"
                    root_id: "rate_limit_filter"
                    vm_config:
                      code:
                        remote:
                          http_uri:
                            uri: https://github.com/layer5io/image-hub/raw/master/rate-limit-filter/pkg/rate_limit_filter_bg.wasm
                          
                      runtime: envoy.wasm.runtime.v8
                      vm_id: rate_limit_filter
                      configuration:
                        "@type": type.googleapis.com/google.protobuf.StringValue
                        value: "WwogIHsKICAgICJuYW1lIjogIi9wdWxsIiwKICAgICJydWxlIjp7CiAgICAgICJydWxlVHlwZSI6ICJyYXRlLWxpbWl0ZXIiLAogICAgICAicGFyYW1ldGVycyI6WwogICAgICAgIHsiaWRlbnRpZmllciI6ICJFbnRlcnByaXNlIiwgImxpbWl0IjogMTAwMH0sCiAgICAgICAgeyJpZGVudGlmaWVyIjogIlRlYW0iLCAibGltaXQiOiAxMDB9LAogICAgICAgIHsiaWRlbnRpZmllciI6ICJQZXJzb25hbCIsICJsaW1pdCI6IDEwfQogICAgICBdCiAgICB9CiAgfSwKICB7CiAgICAibmFtZSI6ICIvYXV0aCIsCiAgICAicnVsZSI6ewogICAgICAicnVsZVR5cGUiOiAibm9uZSIKICAgIH0KICB9LAogIHsKICAgICJuYW1lIjogIi9zaWdudXAiLAogICAgInJ1bGUiOnsKICAgICAgInJ1bGVUeXBlIjogIm5vbmUiCiAgICB9CiAgfSwKICB7CiAgICAibmFtZSI6ICIvdXBncmFkZSIsCiAgICAicnVsZSI6ewogICAgICAicnVsZVR5cGUiOiAibm9uZSIKICAgIH0KICB9Cl0="
                      allow_precompiled: true
      workloadSelector:
        labels:
          app: api
          version: v1
    dependsOn:
      - generic-istio-filter
